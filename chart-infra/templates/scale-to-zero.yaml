{{- if (eq .Values.kubernetes.env "staging") }}
apiVersion: batch/v1beta
kind: CronJob
metadata:
  name: worker-scale-down-job
  namespace: "{{ .Values.namespace }}"
  labels:
    sandboxId: "{{ .Values.sandboxId }}"
spec:
  schedule: '30 * * * *'
  concurrencyPolicy: Replace
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          labels:
            sandboxId: "{{ .Values.sandboxId }}"
        spec:
          containers:
            - name: service-scheduled-job
              image: 'bitnami/kubectl:latest'
              args:
                - scale
                - '--replicas=0'
                - deploy
                - worker
              resources: {}
          restartPolicy: Never
          serviceAccountName: scale-to-zero-operator
          serviceAccount: scale-to-zero-operator
  successfulJobsHistoryLimit: 1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scale-to-zero-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scale-to-zero-operator
rules:
- apiGroups: ["apps"]
  resources:
  - deployments
  - deployments/scale
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scale-to-zero-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scale-to-zero-operator
subjects:
- kind: ServiceAccount
  name: scale-to-zero-operator
{{- end }}
